--- conf/chilli.in	2015-12-11 04:23:14.607415510 -0500
+++ conf/chilli.in	2015-12-14 05:40:49.000000000 -0500
@@ -31,10 +31,12 @@
 
 pidfile=@VARRUN@/chilli.pid
 CONFIG=/etc/chilli.conf
+chilliconf=@ETCCHILLI@/config
 
 if [ -n "$DHCPIF" ]; then
     CONFIG=@ETCCHILLI@/$DHCPIF/chilli.conf
     pidfile=@VARRUN@/chilli.$DHCPIF.pid
+    chilliconf=@ETCCHILLI@/$DHCPIF/config
 fi
 
 [ -f $CONFIG ] || {
@@ -42,84 +44,259 @@
     exit 0
 }
 
+readconfig() {
+        if [ -f "@ETCCHILLI@/config.new" ]; then
+            mv @ETCCHILLI@/config.new @ETCCHILLI@/config
+        fi
 
-start() {
-    echo -n $"Starting $prog: "
+        GW=`grep GATEWAY /etc/sysconfig/network-scripts/ifcfg-eth1 | head -1 | cut -d"=" -f2 | tr -d "'\""`
+        if [ ! -z $GW ]; then
+            WAN="eth1"
+        else
+            WAN="eth0"
+        fi
+        LAN=`uci -q get chilli.setting.interface`
+        IP=`grep IPADDR /etc/sysconfig/network-scripts/ifcfg-${LAN} | head -1 | cut -s -d"=" -f2 | tr -d "'\""`
+        WANIP=`grep IPADDR /etc/sysconfig/network-scripts/ifcfg-${WAN} | head -1 | cut -s -d"=" -f2 | tr -d "'\""`
+        NETMASK=`grep NETMASK /etc/sysconfig/network-scripts/ifcfg-${LAN} | head -1 | cut -s -d"=" -f2 | tr -d "'\""`
+        sed -i "s/^HS_WANIF=.*/HS_WANIF=$WAN/g" $chilliconf
+        sed -i "s/^HS_LANIF=.*/HS_LANIF=$LAN/g" $chilliconf
+
+        iparr=(${IP//./ })
+        maskarr=(${NETMASK//./ })
+        netarr=()
+        for i in {0..3}
+        do
+            netarr[$i]=$((${iparr[i]}&${maskarr[i]}))
+        done
+        NET=$(printf ".%s" "${netarr[@]}")
+        NET=${NET:1}
+
+        sed -i "s/^HS_NETWORK.*/HS_NETWORK=$NET/g" $chilliconf
+        sed -i "s/^HS_NETMASK.*/HS_NETMASK=$NETMASK/g" $chilliconf
+        sed -i "s/^HS_UAMLISTEN.*/HS_UAMLISTEN=$IP/g" $chilliconf
+        sed -i "s/^HS_RADIUS=.*/HS_RADIUS=$IP/g" $chilliconf
+        sed -i "s/^HS_RADIUS2=.*/HS_RADIUS2=$WANIP/g" $chilliconf
+        sed -i "s/^.*HS_NASIP.*/HS_NASIP=\"$WANIP\"/g" $chilliconf
+
+        DNS1=`grep nameserver /etc/resolv.conf | head -1 | cut -d" " -f2`
+#        DNS2=`grep nameserver /etc/resolv.conf | tail -1 | cut -d" " -f2`
+        sed -i "s/^HS_DNS1.*/HS_DNS1=$IP/g" $chilliconf
+        sed -i "s/^HS_DNS2.*/HS_DNS2=$DNS1/g" $chilliconf
+
+        var=`uci -q get radiusd.setting.secret`
+        [ -n "$var" ] && {
+            sed -i "s/^HS_RADSECRET.*/HS_RADSECRET=\"$var\"/g" $chilliconf
+        }
 
-    check_required
+        var=`uci -q get chilli.setting.defidletimeout`
+        [ -n "$var" ] && {
+            sed -i "s/^HS_DEFIDLETIMEOUT.*/HS_DEFIDLETIMEOUT=\"$var\"/g" $chilliconf
+        }
 
-    /sbin/modprobe tun >/dev/null 2>&1
-    echo 1 > /proc/sys/net/ipv4/ip_forward
+        var=`uci -q get chilli.setting.uamdomain`
+        def=`uci -q get chilli.setting.default_uamdomain`
+        if [ -n "$var" -a -n "$def" ]; then
+            var=$var","
+        fi
+        sed -i "s/^HS_UAMDOMAINS.*/HS_UAMDOMAINS=\"$var$def\"/g" $chilliconf
 
-    [ -e /dev/net/tun ] || {
-        (cd /dev; mkdir net; cd net; mknod tun c 10 200)
-    }
-
-    writeconfig
-    radiusconfig
-
-    test ${HS_ADMINTERVAL:-0} -gt 0 && {
-        (crontab -l 2>&- | grep -v $0
-        echo "*/$HS_ADMINTERVAL * * * * $0 radconfig") | crontab - 2>&-
-    }
-
-    test ${HS_LANIF_KEEPADDR:-0} -eq 0 && {
-        storeroutes $HS_LANIF
-        ifconfig $HS_LANIF 0.0.0.0
-    }
-
-    daemon $exec -c $CONFIG
-    retval=$?
-    echo
-    [ $retval -eq 0 ] && touch $lockfile
-    return $retval
-}
+        var=`uci -q get chilli.setting.uamallowed`
+        def=`uci -q get chilli.setting.default_uamallowed`
+        if [ -n "$var" -a -n "$def" ]; then
+            var=$var","
+        fi
+        sed -i "s/^HS_UAMALLOW.*/HS_UAMALLOW=\"$var$def\"/g" $chilliconf
 
-stop() {
-    echo -n $"Stopping $prog: "
-    crontab -l 2>&- | grep -v $0 | crontab -
-
-    test ${HS_LANIF_KEEPADDR:-0} -eq 0 && {
-        ifconfig $HS_LANIF $HS_UAMLISTEN netmask $HS_NETMASK
-    }
-
-    killproc $prog
-    retval=$?
-    echo
-    [ $retval -eq 0 ] && rm -f $lockfile
-    [ $retval -eq 0 ] && rm -f $PIDFILE
-    [ $retval -eq 0 ] && rm -f $RUN_D/$IPCFILE
-    [ $retval -eq 0 ] && rm -f $CMDSOCK
-    [ $retval -eq 0 ] && /bin/rm -f @VARRUN@/chilli.*.cfg.bin
-
-    test ${HS_LANIF_KEEPADDR:-0} -eq 0 && {
-        [ -f $ROUTES_FILE ] && {
-            restoreroutes
-            rm $ROUTES_FILE
-        }
-    }
+        var=`uci -q get chilli.setting.radiusnasid`
+        if [ -n "$var" ]; then
+            sed -i "s/^HS_NASID.*/HS_NASID=\"$var\"/g" $chilliconf
+        else
+            sed -i "s/^HS_NASID.*/HS_NASID=\"nas01\"/g" $chilliconf
+        fi
 
-    return $retval
-}
+        var=`uci -q get chilli.setting.locname`
+        if [ -n "$var" ]; then
+            sed -i "s/^HS_LOC_NAME.*/HS_LOC_NAME=\"$var\"/g" $chilliconf
+        else
+            sed -i "s/^HS_LOC_NAME.*/HS_LOC_NAME=\"Arena HotSpot\"/g" $chilliconf
+        fi
 
-restart() {
-    stop
-    start
+        var=`uci -q get chilli.setting.coaport`
+        if [ -n "$var" ]; then
+            sed -i "s/^HS_COAPORT.*/HS_COAPORT=$var/g" $chilliconf
+        else
+            sed -i "s/^HS_COAPORT.*/HS_COAPORT=3798/g" $chilliconf
+        fi
+
+        var=`uci -q get chilli.setting.mode`
+        if [ -n "$var" ]; then
+            sed -i "s/^chilliController\.mode.*/chilliController\.mode=$var;/g" @ETCCHILLI@/www/chilliController.js
+        else
+            sed -i "s/^chilliController\.mode.*/chilliController\.mode=1;/g" @ETCCHILLI@/www/chilliController.js
+        fi
+
+        var=`uci -q get chilli.setting.dhcpgateway_enable`
+        if [ "1" == $var ]; then 
+            var=`uci -q get chilli.setting.dhcpgateway`
+            [ -n "$var" ] && {
+                sed -i "s/^HS_DHCPGATEWAY.*/HS_DHCPGATEWAY=\"$var\"/g" $chilliconf
+            }
+        else
+            sed -i "s/^HS_DHCPGATEWAY.*/HS_DHCPGATEWAY=\"\"/g" $chilliconf
+        fi
+
+        var=`uci -q get chilli.setting.uamserver_enable`
+        if [ "1" == $var ]; then 
+            var=`uci -q get chilli.setting.uamserver`
+            [ -n "$var" ] && {
+                sed -i "s#^HS_UAMFORMAT.*#HS_UAMFORMAT=\"$var\"#g" $chilliconf
+            }
+            var=`uci -q get chilli.setting.uamport`
+            [ -n "$var" ] && {
+                sed -i "s/^HS_UAMPORT.*/HS_UAMPORT=\"$var\"/g" $chilliconf
+            }
+            var=`uci -q get chilli.setting.uamuiport`
+            [ -n "$var" ] && {
+                sed -i "s/^HS_UAMUIPORT.*/HS_UAMUIPORT=\"$var\"/g" $chilliconf
+            }
+            var=`uci -q get chilli.setting.uamsecret`
+            if [ -n "$var" ]; then
+                sed -i "s/^HS_UAMSECRET.*/HS_UAMSECRET=\"$var\"/g" $chilliconf
+            else
+                sed -i "s/^HS_UAMSECRET.*/HS_UAMSECRET=\"\"/g" $chilliconf
+            fi
+        else
+            sed -i "s/^HS_UAMFORMAT.*/HS_UAMFORMAT=\"http:\/\/1.0.0.1\/www\/login.html\"/g" $chilliconf
+            sed -i "s/^HS_UAMPORT.*/HS_UAMPORT=3990/g" $chilliconf
+            sed -i "s/^HS_UAMUIPORT.*/HS_UAMUIPORT=4990/g" $chilliconf
+            sed -i "s/^HS_UAMSECRET.*/HS_UAMSECRET=\"\"/g" $chilliconf
+        fi
+
+         var=`uci -q get chilli.setting.macauth`
+         [ -n "$var" ] && {
+             state="off"
+             [ "$var" == "1" ] && state="on"
+             sed -i "s/^HS_MACAUTH.*/HS_MACAUTH=$state/g" $chilliconf
+             sed -i "s/^HS_MACREAUTH.*/HS_MACREAUTH=$state/g" $chilliconf
+         }
+
+         var=`uci -q get chilli.setting.redirssl`
+         [ -n "$var" ] && {
+             state="off"
+             [ "$var" == "1" ] && state="on"
+             sed -i "s/^HS_REDIRSSL.*/HS_REDIRSSL=$state/g" $chilliconf
+         }
+
+         var=`uci -q get chilli.setting.option43`
+         [ -n "$var" ] && {
+             if [ "$var" == "1" ]; then
+                 ipsplit=`echo ${IP//./ }`
+                 iphex=`printf "%02X" $ipsplit `
+                 tlv="2B063304"$iphex
+                 sed -i "s/^.*HS_DHCPOPT.*/HS_DHCPOPT=\"$tlv\"/g" $chilliconf
+             else
+                 sed -i "s/^.*HS_DHCPOPT.*/#HS_DHCPOPT=\"\"/g" $chilliconf
+             fi
+         }
+
+        . $chilliconf
 }
 
 case "$1" in
-    start|stop|restart)
-        $1
+    start)
+        if [ '0' == `uci -q get chilli.setting.enable` ]; then
+            exit 0;
+        fi
+
+        echo -n $"Starting $prog: "
+
+        check_required
+
+        /sbin/modprobe tun >/dev/null 2>&1
+        echo 1 > /proc/sys/net/ipv4/ip_forward
+
+        [ -e /dev/net/tun ] || {
+            (cd /dev; mkdir net; cd net; mknod tun c 10 200)
+        }
+
+        readconfig
+        writeconfig
+        radiusconfig
+
+        test ${HS_ADMINTERVAL:-0} -gt 0 && {
+            (crontab -l 2>&- | grep -v $0
+            echo "*/$HS_ADMINTERVAL * * * * $0 radconfig") | crontab - 2>&-
+        }
+
+        test ${HS_LANIF_KEEPADDR:-0} -eq 0 && {
+            storeroutes $HS_LANIF
+            ifconfig $HS_LANIF 0.0.0.0
+        }
+
+        if [ "$(which start-stop-daemon 2>/dev/null)" = "" ]; then
+            daemon $exec -c $CONFIG --pidfile=$pidfile
+        else
+            start-stop-daemon -S --pidfile=$pidfile --user=chilli \
+                    --exec $exec -- -c $CONFIG &
+        fi
+        retval=$?
+        echo
+        [ $retval -eq 0 ] && touch $lockfile
+
+        if [ -z $2 ]; then
+            /etc/init.d/xl2tpd restart
+        fi
+        ;;
+    stop)
+        echo -n $"Stopping $prog: "
+        crontab -l 2>&- | grep -v $0 | crontab -
+
+        if [ "$(which start-stop-daemon 2>/dev/null)" != "" ]; then
+            start-stop-daemon -K --pidfile=$pidfile --user=chilli \
+                $exec
+        else
+            killproc -p $pidfile $prog
+        fi
+
+        retval=$?
+        echo
+        [ $retval -eq 0 ] && rm -f $lockfile
+        [ $retval -eq 0 ] && rm -f $pidfile
+        [ $retval -eq 0 ] && rm -f $RUN_D/$IPCFILE
+        [ $retval -eq 0 ] && rm -f $CMDSOCK
+#        [ $retval -eq 0 ] && /bin/rm -f @VARRUN@/chilli.*.cfg.bin
+
+        test ${HS_LANIF_KEEPADDR:-0} -eq 0 && {
+            ifconfig $HS_LANIF $HS_UAMLISTEN netmask $HS_NETMASK
+            [ -f $ROUTES_FILE ] && {
+                restoreroutes
+                rm $ROUTES_FILE
+            }
+        }
+
+        if [ -z $2 ]; then
+            /etc/init.d/xl2tpd restart
+        fi
+        ;;
+    restart)
+        $0 stop me
+        sleep 1
+        $0 start me
+        RETVAL=$?
+        if [ -z $2 ]; then
+            /etc/init.d/xl2tpd restart
+        fi
         ;;
     force-reload)
-        restart
+        $0 restart
         ;;
     status)
         status $prog
         ;;
     try-restart|condrestart)
         if status $prog >/dev/null ; then
-            restart
+            $0 restart
         fi
 	;;
     reload)
@@ -131,6 +308,7 @@
         action $"Service ${0##*/} does not support the reload action: " /bin/false
         exit 3
         ;;
+
     *)
         echo $"Usage: $0 {start|stop|status|restart|try-restart|force-reload}"
         exit 2
